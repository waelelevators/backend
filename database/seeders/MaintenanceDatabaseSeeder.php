<?php

namespace Modules\Maintenance\Database\Seeders;

use Illuminate\Database\Seeder;
use Modules\Maintenance\Entities\MaintenanceContractDetail;
use Carbon\Carbon;
use Illuminate\Support\Arr;

class MaintenanceContractTestDataSeeder extends Seeder
{
    protected $clientIds = [2722, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200, 3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208, 3209, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3290, 3291, 3292, 3293, 3294, 3295, 3296, 3297, 3298, 3299, 3300, 3301, 3302, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 3315, 3316, 3323, 3324, 3334, 3361, 3371, 3396, 3429, 3437, 3525, 3542, 3566, 3594, 3627, 3631, 3638, 3676, 3685, 3703, 3709, 3716, 3720, 3755, 3773, 3795, 3867, 3914, 3920, 3922, 3935, 3941, 3959, 3969, 4068, 4070, 4071, 4074, 4092, 4107, 4150, 4176, 4188, 4192, 4225, 4228, 4272, 4283, 4306, 4311, 4345, 4354, 4382, 4388, 4391, 4406, 4416, 4433, 4434, 4463, 4472, 4496, 4511, 4526, 4581, 4594, 4598, 4606, 4613, 4692, 4702, 4708, 4713, 4717, 4727, 4729, 4742, 4749, 4751, 4757, 4762, 4799, 4802, 4810, 4818, 4833, 4849, 4862, 4888, 4915, 4918, 4924, 4964, 4965, 4971, 4980, 4990, 4993, 5002, 5009, 5029, 5040, 5047, 5048, 5056, 5097, 5114, 5118, 5122, 5125, 5143, 5177, 5178, 5180, 5192, 5193, 5201, 5225, 5265, 5271, 5274, 5287, 5289, 5324, 5325, 5333, 5336, 5355, 5359, 5361, 5362, 5382, 5384, 5388, 5392, 5400, 5410, 5416, 5422, 5427, 5459, 5460, 5462, 5476, 5482, 5487, 5501, 5511, 5527, 5557, 5559, 5602, 5611, 5618, 5620, 5632, 5633, 5636, 5638, 5651, 5654, 5696, 5698, 5700, 5701, 5702, 5703];

    public function run()
    {
        // مسح البيانات الموجودة إذا كنت تريد بدء نظيف
        MaintenanceContractDetail::truncate();

        // توزيع العقود على السنوات
        $contractDistribution = [
            1 => 400,  // 400 عقد لمدة سنة
            2 => 300,  // 300 عقد لمدة سنتين
            3 => 200,  // 200 عقد لمدة 3 سنوات
            4 => 100   // 100 عقد لمدة 4 سنوات
        ];

        $contracts = [];
        $now = Carbon::now();

        foreach ($contractDistribution as $years => $count) {
            for ($i = 0; $i < $count; $i++) {
                // اختيار عميل عشوائي
                $clientId = Arr::random($this->clientIds);

                // تحديد تاريخ البداية بشكل عشوائي في آخر 5 سنوات
                $startDate = Carbon::now()
                    ->subYears(rand(0, 5))
                    ->subMonths(rand(0, 11));

                // تحديد تاريخ النهاية
                $endDate = Carbon::parse($startDate)->addYears($years);

                // تحديد التكلفة بشكل عشوائي مع زيادة حسب مدة العقد
                $baseCost = rand(5000, 15000); // تكلفة أساسية
                $cost = $baseCost * $years * (1 + (rand(-20, 20) / 100)); // تنويع بنسبة ±20%

                // تحديد عدد الزيارات بناءً على مدة العقد
                $visitsCount = $years * rand(2, 4);

                $contracts[] = [
                    'client_id' => $clientId,
                    'user_id' => rand(1, 10), // افتراض وجود 10 مستخدمين
                    'start_date' => $startDate,
                    'end_date' => $endDate,
                    'visits_count' => $visitsCount,
                    'cost' => round($cost, 2),
                    'remaining_visits' => rand(0, $visitsCount),
                    'payment_status' => Arr::random(['paid', 'pending', 'partial']),
                    'created_at' => $now,
                    'updated_at' => $now
                ];

                // إضافة العقود على دفعات لتجنب مشاكل الذاكرة
                if (count($contracts) >= 100) {
                    MaintenanceContractDetail::insert($contracts);
                    $contracts = [];
                }
            }
        }

        // إدخال العقود المتبقية
        if (!empty($contracts)) {
            MaintenanceContractDetail::insert($contracts);
        }
    }
}